#!/bin/bash

export PATH=/usr/local/bin:$PATH

REGION=$(nubis-region)
ARENA=$(nubis-metadata NUBIS_ARENA)
PROJECT=$(nubis-metadata NUBIS_PROJECT)
BUCKET=$(nubis-metadata NUBIS_FLUENT_BUCKET)
ELB_BUCKET=$(nubis-metadata NUBIS_ELB_BUCKET)
ES_ENDPOINT=$(nubis-metadata NUBIS_FLUENT_ES_ENDPOINT)

SQS_QUEUE=$(nubis-metadata NUBIS_FLUENT_SQS_QUEUE)
SQS_REGION=$(nubis-metadata NUBIS_FLUENT_SQS_QUEUE_REGION)
SQS_ACCESS_KEY=$(nubis-metadata NUBIS_FLUENT_SQS_ACCESS_KEY)
SQS_SECRET_KEY=$(nubis-secret get SQS/SecretKey)

PREFIX="$PROJECT/$ARENA/config"

# Make sure our region/arena is in our config
consulate kv set "$PREFIX/AWSRegion" "$REGION"
consulate kv set "$PREFIX/Arena" "$ARENA"

# Publish our settings into Consul, careful to clean up and delete
# what might have been there but isn't currently specified anymore

if [ ! -z "$BUCKET" ]; then
  consulate kv set "$PREFIX/FluentLogsBucket" "$BUCKET"
else
  consulate kv rm "$PREFIX/FluentLogsBucket"
fi

if [ ! -z "$ELB_BUCKET" ]; then
  consulate kv set "$PREFIX/AccessLoggingBucket" "$ELB_BUCKET"
else
  consulate kv rm "$PREFIX/AccessLoggingBucket"
fi

if [ ! -z "$ES_ENDPOINT" ]; then
  consulate kv set "$PREFIX/ElasticSearch/AWSEndpoint" "https://$ES_ENDPOINT"

  # enable awsproxy service (XXX: Use confd)
  start awsproxy
  if [ -f "/etc/consul/svc-awsproxy.json.gz" ]; then
    gunzip /etc/consul/svc-awsproxy.json.gz
    reload consul
  fi

else
  consulate kv rm "$PREFIX/ElasticSearch/AWSEndpoint"


  # Disable awsproxy service (XXX: Use confd)
  if [ -f "/etc/consul/svc-awsproxy.json" ]; then
    gzip /etc/consul/svc-awsproxy.json
    reload consul
  fi
  stop awsproxy
fi

KV="$PREFIX/SQS/Queue"
if [ ! -z "$SQS_QUEUE" ]; then
  consulate kv set "$KV" "$SQS_QUEUE"
else
  consulate kv rm "$KV"
fi

KV="$PREFIX/SQS/Region"
if [ ! -z "$SQS_REGION" ]; then
  consulate kv set "$KV" "$SQS_REGION"
else
  consulate kv rm "$KV"
fi

KV="$PREFIX/SQS/AccessKey"
if [ ! -z "$SQS_ACCESS_KEY" ]; then
  consulate kv set "$KV" "$SQS_ACCESS_KEY"
else
  consulate kv rm "$KV"
fi

KV="$PREFIX/SQS/SecretKey"
if [ ! -z "$SQS_SECRET_KEY" ]; then
  consulate kv set "$KV" "$SQS_SECRET_KEY"
else
  consulate kv rm "$KV"
fi
